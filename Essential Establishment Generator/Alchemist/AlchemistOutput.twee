
:: AlchemistOutput [output]

<h1>$alchemist.name</h1>You enter $alchemist.name and see the chemist is <<print $chemist.idle.random()>>. The $alchemist.size room is $alchemist.cleanliness. The blacksmith <<print either($chemist.greeting)>>, and <<print either("saunters", "walks", "strolls", "walks", "slowly walks", "drags $chemist.hisher feet over")>> to you, and introduces $chemist.himher<<nobr>>self<</nobr>> as $chemist.name, the $chemist.owner of the smithy, and asks what $chemist.heshe can do for you.

<<linkreplace "<h4>Talk with $chemist.name</h4>" t8n>>
<h3>$chemist.name</h3><</linkreplace>>

<<link "<h4>Generate a random potion!</h4>">>
<<nobr>><<set _potionroll to random(0, 99)>>
	<<set $potion.title to $potion.title[_potionroll], $potion.effect to $potion.effect[_potionroll]>><<set $potion.titlereadout to either($potion.type) + " of " + either($potion.title)>>
<<set $potion.descriptionreadout to "The potion is in a " + either($potion.container) + ", and has a label showing " + either($potion.label) + ". It looks " + either($potion.appearance) + " with " + either($potion.appearance2) + ". " + "It is " + either($potion.texture) + " and smells of " + either($potion.smell) + " but tastes of " + either($potion.taste) + ".">>
<<set $potion.functionreadout to "The potion's strength is " + either($potion.strength) + ", and " + either($potion.effect) + " with the side effect of " + either($potion.sideeffect) + ".">><</nobr>>
    <<replace "#randpotion">>
        \<div class="descriptive">
            \<h3>$potion.titlereadout</h3>
            \$potion.descriptionreadout<br>
            \$potion.functionreadout
        \</div>
    \<</replace>>
<</link>>\
<span id="randpotion"></span>


<<linkappend "<h4>Buy something</h4>">><<nobr>>
<table>
  <tr>
    <th>Item</th>
    <th>Cost</th>
  </tr>
<<switch $town.type>>
  <<case "city">>
  <<for _i, _item range $alchemist.inventory.filter(function (item) { return item.availability <= 4; })>><tr><td>_item.name</td>
<td><<money _item.cost>></td></tr>
  <</for>>
  <<case "town">>
  <<for _i, _item range $alchemist.inventory.filter(function (item) { return item.availability <= 3; })>><tr><td>_item.name</td>
<td><<money _item.cost>></td></tr>
  <</for>>
  <<case "village">>
  <<for _i, _item range $alchemist.inventory.filter(function (item) { return item.availability <= 2; })>><tr><td>_item.name</td>
<td><<money _item.cost>></td></tr>
  <</for>>
  <<case "hamlet">>
  <<for _i, _item range $alchemist.inventory.filter(function (item) { return item.availability <= 1; })>><tr><td>_item.name</td>
<td><<money _item.cost>></td></tr>
  <</for>></table>
<</switch>><</nobr>><</linkappend>>
