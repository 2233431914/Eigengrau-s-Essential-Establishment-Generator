:: TradesOutput

<table>
  <tr>
    <th>Trade</th>
    <th>Number</th>
  </tr>
<<nobr>>
<<for _i, _trade range $trade>>
    <<set _townPop to $town.population>>
    <<set _trade.roll to (_townPop /= _trade.sv)>> /* Set the number of trades equal to the town's population divided by how many people are needed to support that type of business */
          <<if _trade.roll lt 1>>
              <<set _trade.roll *= 100>>
              <<set _roll to random(1, 100)>> /* if the population cannot support 1, then it's converted into a percentage chance that there's one of them */
                  <<if _trade.roll gte _roll>>
                      <<set _trade.count to 0>>
                  <<else>>
                      <<set _trade.count to 1>>
                  <</if>>
          <<else>>
              <<set _trade.count to Math.trunc(_trade.roll)>> /* Truncate the number to a whole number */
          <</if>>
      <<if _trade.count gte 1>>
        /* <<set _trade.count to _trade.countTest>>
            <<for _i, _tradeTest range _trade>>
              <<if _trade.countTest gt 0>>
                <<run State.setVar(_trade.profession, setup.createNPC({profession: _trade.profession}))>>
                <<set _trade.countTest -= 1>>
              <</if>>
            <</for>> */
          <tr><td><<print _trade.profession.toUpperFirst()>></td>
        <td>_trade.count</td></tr>
      <</if>>
      <</for>><</nobr>>
</table>
