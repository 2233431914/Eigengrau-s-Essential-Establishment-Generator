:: TownOutput
<<set _town to $town>>
<<button "Edit $town.name">><<goto "TownEdit">><</button>>

$town.name is located in the $town.terrain $town.location, where the vegetation is $town.vegetation. $town.name grew around $town.origin. They harvest $town.primaryCrop, and nearby is a region rich with $town.primaryExport.

They are a $town.economicIdeologyIST $town.politicalIdeologyIC $town.politicalSource. The nearest <<include "TownLandmarkRandomizer">> A population of $town.population, the denizens live a $town.wealth existence. <<print $town.currentEvent.toUpperFirst()>> is currently taking place.

<h3>Government in $town.name</h3>$town.economicIdeologyDescription $town.politicalSourceDescription
<h4>Economics</h4>$town.economics $town.welfare <h4>Law and Order</h4>$town.military $town.law $town.arcana
<h3>Factions</h3><<silently>>
    <<set _listbox to '<<listbox "$newFaction">>'>>
    <<for _key range Object.keys(setup.factionData.type)>>
        <<set _listbox += '<<option "' + _key + '" "' + _key + '">>'>>
    <</for>>
    <<set _listbox += '<</listbox>>'>>
<</silently>>\
_listbox -- <<button "Create new faction">>
  <<run console.log('Creating a new ' + $newFaction)>>
  <<if ndef $town.factions[$newFaction]>>
    <<set $town.factions[$newFaction] = []>>
  <</if>>
  <<run $town.factions[$newFaction].push(setup.createFaction($town, {
    type: $newFaction
    }))>>
  <<run console.log($town)>>
  <<goto "TownOutput">>
<</button>>
<<unset $selected>><<for _key, _factionType range $town.factions>><<for _index, _faction range _factionType>><<capture _key, _index, _faction>>
<<link "_faction.name">><<set $selected to {key: _key, index: _index, faction: _faction}>><<goto "FactionProfile">><</link>> - A _faction.size _faction.type _faction.factionNoun
<</capture>><</for>><</for>>

<div class='classTable'><<nobr>><table>
    <tr>
        <th>Race</th>
        <th>Population</th>
        <th>Percentage</th>
        /* <th>Raw Number</th> */
    </tr>
<<for _race, _percentage range $town.demographic>>
    <tr>
        <td><<print _race.toUpperFirst()>></td>
        <td><<print Math.trunc($town.population * (_percentage / 100))>></td>
        <td><<print _percentage.toFixed(2)>></td>
        /* <td><<print $town.baseDemographics[_race]>></td> */
    </tr>
<</for>>
</table><</nobr>></div>

<<linkappend "<h3>List of NPCs</h3>">><<nobr>>
<table>
  <tr>
    <th>Name</th>
    <th>Race</th>
    <th>Profession</th>
    <th>Delete</th>
  </tr>
  <<for _i, _npc range $npcs>><<capture _i, _npc>>
  <tr><td><<profile $npcs[_npc.key]>></td>
  <td>_npc.race</td>
  <td>_npc.dndClass</td>
  <td><<link "x">><<run delete $npcs[_npc.key]>><<goto "TownOutput">><</link>></td>
  </tr>
  <</capture>><</for>>
  </table><</nobr>>
<</linkappend>>

<<linkappend "<h3>Businesses in $town.name</h3>">>
<<nobr>>
<table>
  <tr>
    <th>Profession</th>
    <th>Number</th>
  </tr>
  <<set $town.professions to setup.fetchProfessions($town)>>
  <<for _name, _profession range $town.professions>>
  <tr><td><<print _profession.name>></td>
<td>_profession.population</td></tr><</for>>
</table><</nobr>>
<</linkappend>>

<<back>>
